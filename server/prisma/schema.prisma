// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId String @id @default(cuid())
  email String @unique 
  password String
  username String
  yearOfPassingOut Int
  avatar String @default("Doodle")
  courseId String
  xHandle String?
  linkedIn String?
  createdAt DateTime @default(now())
  interviews Interview[]
  course_branch   Course  @relation(fields: [courseId], references: [courseId])
}

model Course{
  courseId String @id
  courseName String
  branchName String
  user User[]
}

model Interview{
  id String @id @default(cuid()) 
  authorId String
  companyName String
  yearOfInterview Int
  role String
  CTCOffered Int?
  interviewStatus String
  createdAt DateTime @default(now())
  interviewRounds InterviewRound[]
  tags InterviewTag[] @relation("InterviewToTag")
  user User @relation(fields: [authorId],references: [userId])
}

model InterviewRound{
  id String @id @default(cuid())
  roundType String
  note String?
  questions Question[]

  interviewId String 
  interview Interview @relation(fields: [interviewId],references: [id])
}

model Question{
  id String @id @default(cuid())
  title String
  description String?
  link String?

  roundId String
  interviewRound InterviewRound @relation(fields: [roundId], references: [id])
}

model InterviewTag{
  tagId String @id @default(cuid())
  tagName String @unique
  interviews Interview [] @relation("InterviewToTag")
}